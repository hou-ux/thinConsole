export=thinConsole;export as namespace thinConsole;declare class thinConsole{static plugins:Record<string,typeof tCPlugin|Function>;static hooks:Record<string,Array<(...args:any[])=>void>>;static tC:thinConsole|null;static addPlugin(name:string,plugin:typeof tCPlugin|((tc:thinConsole,cfg?:any)=>void),config?:any):typeof thinConsole;static addHook(hook:thinConsole.HookName,fn:(...args:any[])=>void):typeof thinConsole;static removeHook(hook:thinConsole.HookName,fn:(...args:any[])=>void):typeof thinConsole;constructor(options?:thinConsole.Options);readonly version:string;readonly options:Required<thinConsole.Options>;readonly currentTheme:'light'|'dark';readonly currentTab:string;readonly logs:thinConsole.LogItem[];readonly systemLogs:thinConsole.LogItem[];readonly pluginEnabled:boolean;readonly disabledPlugins:string[];readonly plugins:Record<string,tCPlugin>;log(...args:any[]):this;info(...args:any[]):this;warn(...args:any[]):this;error(...args:any[]):this;systemLog(...args:any[]):this;systemInfo(...args:any[]):this;systemWarn(...args:any[]):this;systemError(...args:any[]):this;show(tab?:'console'|'system'|'localstorage'|string):this;hide():this;clearAllLogs(systemToo?:boolean):void;enablePlugin(name:string):this;disablePlugin(name:string):this;loadSinglePlugin(name:string):this;destroyPlugin(name:string):this;initPlugins():this;triggerGlobalHook(name:thinConsole.HookName,...args:any[]):this;destroy():void;renderContent():this;renderLogList(list:thinConsole.LogItem[],isSystem:boolean):void;updateFilterCounts():void;toggleExpandJson(id:number):void;updateLogItem(id:number,isSystem?:boolean):void;copyLog(id:number,isSystem?:boolean,isLS?:boolean):void;changeJsonPage(id:number,page:number):void;getPagedJson(obj:any,page:number):any;getJsonKeys(obj:any):string[];safeStringify(obj:any,space?:number):string;formatArgs(args:any[],logId:number):string;formatArgsForPlainText(args:IArguments):string;highlightJson(jsonStr:string):string;renderLocalStorage():void;addLSItem():void;editLSItem(key:string):void;saveLSItem(oldKey:string):void;cancelEditLSItem(key:string):void;removeLSItem(key:string):void;changeLSJsonPage(key:string,page:number):void;renderLSJsonPage(key:string,value:any,page:number):void;isLSEmpty():boolean;findLSItem(key:string):HTMLElement|null;updateLSItemView(key:string):void;addLSItemToDOM(key:string,value:string):void;parseAndTypeCheck(value:string):{displayValue:string;valueType:string;isJSON:boolean};fixKeysOnly(str:string):string;escapeHtml(str:string):string;showNotification(text:string,type?:'warning'|''):void;initShortcuts():void;enableShortcuts():void;disableShortcuts():void;handlePanelShortcuts(e:KeyboardEvent):void;switchTab(tabId:'console'|'system'|'localstorage'|string):void;createStyles():void;createButton():void;createOverlayElement():void;createNotificationElement():void;createBuiltinTabs():void;createPluginTab(tab:{id:string;name:string;icon?:string}):void;saveBtnPos(pos:{x:number;y:number}):void;getSavedBtnPos():{x:number;y:number}|null;setupGlobalEventHandlers():void;setupSelfProtection():void}declare abstract class tCPlugin{readonly tC:thinConsole;readonly config:any;readonly id:string;constructor(tc:thinConsole,config?:any);init():void;isMobile():boolean;isen():boolean;iszh():boolean;render?(container:HTMLElement):void;onShow?():void;onHide?():void;destroy?():void;addTab?():{id:string;name:string;icon?:string}}declare namespace thinConsole{type Theme='auto'|'light'|'dark';type FilterType='all'|'log'|'info'|'warn'|'error';type HookName='beforeRender'|'afterRender'|'beforeLog'|'afterLog'|'beforeOpen'|'afterOpen'|'beforeClose'|'afterClose'|'beforeClear'|'afterClear'|'pluginMount'|'pluginUnmount';interface Options{text?:string;color?:string;width?:string;height?:string;theme?:Theme;plugins?:boolean;disabledPlugins?:string[];jsExecute?:boolean;pos?:{x:number;y:number}}interface LogItem{id:number;type:FilterType;args:any[];content:string;timestamp:Date;count:number;expandedJson:boolean;contentSign:string;hasObject:boolean;isError:boolean;isSystem:boolean}}